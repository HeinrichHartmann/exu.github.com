#+STARTUP: showall indent
#+STARTUP: hidestars
#+OPTIONS: H:4 num:nil tags:nil toc:nil timestamps:t
#+BEGIN_HTML
---
layout: post
title: BDD with 3 languages - PHP with PHPSpec, Golang with Ginkgo and Javascript with Mocha
date: 2014-03-15 07:16:59 UTC
updated: 2014-03-15 10:00:59 UTC
comments: true
category: programming
tags: [tdd, bdd, spec, php, phpspec, go, golang, ginkgo, javascript, mocha]
---
{% include JB/setup %}
#+END_HTML

#+BEGIN_HTML
<img src="/assets/img/php-js-go-bdd.png" class="img-responsive" alt="">
#+END_HTML


* Sharpening Your SpecBDD skills

In these series I want to show differences (or similarities) between PHP,
Google's Golang, and Javascript when you want to develop your code
with BDD techniques. Why? One of reason is that You can easily port your specs to
other language, spec is your project and your documentation and if you want learn
some new language and You have already written what should be done then half of
your work is done already. I was really suprised how easily I ported specs from
Go to javascript.

** TLDR; goto blog entries for first excercise directly

#+BEGIN_HTML
<a class="btn btn-primary" href="http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-php-with-phpspec">PHP and PHPSpec</a>
<a class="btn btn-primary" href="http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-golang-and-ginkgo">Golang and Ginkgo</a>
<a class="btn btn-primary" href="http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-javascript-with-mocha">Javascript and Mocha</a>
<br>
#+END_HTML



** WiredToTheMoon Blog
Idea to do some simple BDD excercises came from http://www.wiredtothemoon.com/2012/12/12-tdds-of-christmas/.
First I 've done that in PHP, after that I want to try the same in Golang which I was playing with,
and because I'm doing some javascript research recently so I've wrote first excercises in Javascript too.

I have my solutions in 3 separate repositories one per language (+ bdd framework)
- PHP - https://github.com/exu/php-12bdds
- Golang - https://github.com/exu/bddgo
- Javascript - https://github.com/exu/jsbdds

If You start your adventure with SpecBDD It'll be great boost for You to do whis *wiredtothemoon*
excercises. If You have some ideas how to improve some of this excercises I'll be happy to hear
about it.

* Completed excercises

**  My Excercise status for languages of 12 tdds from wiredtothemoon blog

Here will be updates about my completed excercises.

#+ATTR_HTML: :class table table-stripped
| No | Excercise          | PHP                   | Golang        | Javascript    |
|----+--------------------+-----------------------+---------------+---------------|
|  1 | Calculations       | [[https://github.com/exu/php-12bdds/blob/master/spec/Exc01/CalcStatsSpec.php][spec]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc01/CalcStats.php][src]] [[http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-php-with-phpspec][blog]]         | [[https://github.com/exu/bddgo/blob/master/stats_test.go][spec]] [[https://github.com/exu/bddgo/blob/master/stats.go][src]] [[http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-golang-and-ginkgo][blog]] | [[https://github.com/exu/jsbdds/blob/master/test/numnames.js][spec]] [[https://github.com/exu/jsbdds/blob/master/lib/numnames.js][src]] [[http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-javascript-with-mocha][blog]] |
|  2 | Numbers spelling   | [[https://github.com/exu/php-12bdds/blob/master/spec/Exc02/NumberNamesSpec.php][spec]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc02/NumberNames.php][src]]              | [[https://github.com/exu/bddgo/blob/master/numnames_test.go][spec]] [[https://github.com/exu/bddgo/blob/master/numnames.go][src]]      | [[https://github.com/exu/jsbdds/blob/master/test/numnames.js][spec]] [[https://github.com/exu/jsbdds/blob/master/lib/numnames.js][src]]      |
|  3 | Bomberman game     | [[https://github.com/exu/php-12bdds/blob/master/spec/Exc03/MinerSpec.php][spec]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc03/Miner.php][src]]              | [[https://github.com/exu/bddgo/blob/master/miner_test.go][spec]] [[https://github.com/exu/bddgo/blob/master/miner.go][src]]      | [[https://github.com/exu/jsbdds/blob/master/test/bomberman.js][spec]] [[https://github.com/exu/jsbdds/blob/master/lib/bomberman.js][src]]      |
|  4 | Monty Hall game    | [[https://github.com/exu/php-12bdds/blob/master/spec/Exc04/ZonkSpec.php][spec]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc04/Zonk.php][src]]              | [[https://github.com/exu/bddgo/blob/master/zonk_test.go][spec]] [[https://github.com/exu/bddgo/blob/master/zonk.go][src]]      | [[https://github.com/exu/jsbdds/blob/master/test/zonk.js][spec]] [[https://github.com/exu/jsbdds/blob/master/lib/zonk.js][src]]      |
|  5 | FizzBuzz           | [[https://github.com/exu/php-12bdds/blob/master/spec/Exc05/FizzBuzzSpec.php][spec]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc05/FizzBuzz.php][src]]              |               |               |
|  6 | Recently used list | [[https://github.com/exu/php-12bdds/blob/master/spec/Exc06/RecentlyUsedSpec.php][spec]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc06/RecentlyUsed.php][src]]              |               |               |
|  7 | Template engine    | [[https://github.com/exu/php-12bdds/blob/master/spec/Exc07/TplrSpec.php][spec]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc07/Tplr.php][src]]              |               |               |
|  8 | Range class        | [[https://github.com/exu/php-12bdds/blob/master/spec/Exc08/IntRangeSpec.php][spec1]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc08/IntRange.php][src1]] [[https://github.com/exu/php-12bdds/blob/master/spec/Exc08/FloatRangeSpec.php][spec2]] [[https://github.com/exu/php-12bdds/blob/master/src/Exc08/FloatRange.php][src2]] |               |               |
|  9 |                    |                       |               |               |
| 10 |                    |                       |               |               |
| 11 |                    |                       |               |               |
| 12 |                    |                       |               |               |
|    |                    |                       |               |               |

I'll try to complete some more in near future

** Excercise 2 -  Number speller

Second excercise is little harder. Your task is to write number speller.
You give a number and your function will spell it. Simple isn't it?

*** PHPSpec and PHP

- Sources on github
  - spec: [[https://github.com/exu/php-12bdds/blob/master/spec/Exc02/NumberNamesSpec.php]]
  - source: https://github.com/exu/php-12bdds/blob/master/src/Exc02/NumberNames.php

*** Golang and Ginkgo

- Sources on github
  - spec: https://github.com/exu/bddgo/blob/master/numnames_test.go
  - source: https://github.com/exu/bddgo/blob/master/numnames.go

*** Javascript and Mocha

- Sources on github
  - spec: https://github.com/exu/jsbdds/blob/master/test/numnames.js
  - source: https://github.com/exu/jsbdds/blob/master/lib/numnames.js


** Excercise 1 -  Numbers statistics

First excercise is really warm-up, it's really simple task to calculate
some data (sum, avg, min, max, count) from given list of integers.
You'll find My solutions below. (all exercises are commited to repository from
given language and test framework)

*** PHPSpec and PHP

You can find details about [[http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-php-with-phpspec][my PHP solution in separate post]]

- Sources on github
  - spec: https://github.com/exu/php-12bdds/blob/master/spec/Exc01/CalcStatsSpec.php
  - source: https://github.com/exu/php-12bdds/blob/master/src/Exc01/CalcStats.php

*** Golang and Ginkgo

You can find details about [[http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-golang-and-ginkgo][my Golang solution in separate post]]

- Sources on github
  - spec: https://github.com/exu/bddgo/blob/master/stats_test.go
  - source: https://github.com/exu/bddgo/blob/master/stats.go

*** Javascript and Mocha

You can find details about [[http://wysocki.in/programming/2014/03/excercise-1-calc-bdd-in-javascript-with-mocha][my Javascript solution in separate post]]

- Sources on github
  - spec: https://github.com/exu/jsbdds/blob/master/test/calc.js
  - source: https://github.com/exu/jsbdds/blob/master/lib/calc.js


* Tools used for writing BDD specs

** PHP - PHPSpec

It's modern technique of writing your tests/specs in PHP world from Konstantin Kudryashov
(@everzet). It should be treaten like DSL (don't try to complain that it's not PSR
compatible).  You can find coverage tool for it too (but probably when You need it in spec
way you are doing something wrong). I You are PHPUnit guy (girl) then You should give PHPSpec
a try (If You don't write tests/specs for your new code hmm ... start doing it now!).

** Golang - Ginkgo

Syntax in Ginkgo is very familiar to many known tools (Rspec from ruby or Mocha from javascript)
Your'e defining your expectations. It has many tools which make your Golang concurency easier.

** Javascript (Nodejs) - Mocha

Mocha is written by TJ Holowaychuk author of very popular Express framework. It's really good
piece of software. You can install assert library of your choice (I've chosed should.js). Mocha
has nice async handling and could be used to write any kind of tests from spec/unit to end-to-end.

* Setup

** PHPSpec

Look at:
https://github.com/exu/php-12bdds/blob/master/composer.json

If You're bad PHP boy without knowledge about [[http://getcomposer.org][composer]] you should
take a pen and piece of paper and write:
"I will use proper tools for my PHP development workflow!"
*two hundred times!*

Remember to call
#+begin_src sh
composer install
#+end_src

in your shell

** Ginkgo

So You want to write some Golang code. Setup is really simple (https://github.com/onsi/ginkgo)
Look at my repository for details https://github.com/exu/bddgo

** Mocha

run:

#+begin_src sh
npm install mocha --save-dev
#+end_src

and start writing your specs in tests directory.


* Conclusions

I think that the slighty faster development time You can achieve in PHPSpec.  Main reason
for it are Its generators. Slighty more readable output in case of errors are in Mocha
IMHO in PHPSpec diffs are sometimes annoying (you need to go into verbose mode) and when
difference is in long string at the end you'll not receive valid diff.
